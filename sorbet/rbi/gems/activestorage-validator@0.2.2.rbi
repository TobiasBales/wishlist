# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `activestorage-validator` gem.
# Please instead update this file by running `bin/tapioca gem activestorage-validator`.

# source://activestorage-validator//lib/activestorage/validator/blob.rb#1
module ActiveRecord
  class << self
    # source://activerecord/7.0.4.1/lib/active_record.rb#277
    def action_on_strict_loading_violation; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#277
    def action_on_strict_loading_violation=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#270
    def application_record_class; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#270
    def application_record_class=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#213
    def async_query_executor; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#213
    def async_query_executor=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#183
    def default_timezone; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#187
    def default_timezone=(default_timezone); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#311
    def dump_schema_after_migration; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#311
    def dump_schema_after_migration=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#321
    def dump_schemas; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#321
    def dump_schemas=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#365
    def eager_load!; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#296
    def error_on_ignored_order; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#296
    def error_on_ignored_order=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record/gem_version.rb#5
    def gem_version; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#236
    def global_executor_concurrency; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#228
    def global_executor_concurrency=(global_executor_concurrency); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#216
    def global_thread_pool_async_query_executor; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#240
    def index_nested_attribute_errors; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#240
    def index_nested_attribute_errors=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#171
    def lazily_load_schema_cache; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#171
    def lazily_load_schema_cache=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#180
    def legacy_connection_handling; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#180
    def legacy_connection_handling=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#258
    def maintain_test_schema; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#258
    def maintain_test_schema=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#340
    def query_transformers; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#340
    def query_transformers=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#255
    def queues; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#255
    def queues=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#355
    def raise_int_wider_than_64bit; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#355
    def raise_int_wider_than_64bit=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#200
    def reading_role; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#200
    def reading_role=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#177
    def schema_cache_ignored_tables; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#177
    def schema_cache_ignored_tables=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#288
    def schema_format; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#288
    def schema_format=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#328
    def suppress_multiple_database_warning; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#328
    def suppress_multiple_database_warning=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#302
    def timestamped_migrations; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#302
    def timestamped_migrations=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#347
    def use_yaml_unsafe_load; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#347
    def use_yaml_unsafe_load=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#248
    def verbose_query_logs; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#248
    def verbose_query_logs=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#337
    def verify_foreign_keys_for_fixtures; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#337
    def verify_foreign_keys_for_fixtures=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record/version.rb#7
    def version; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#267
    def warn_on_records_fetched_greater_than; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#267
    def warn_on_records_fetched_greater_than=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#197
    def writing_role; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#197
    def writing_role=(_arg0); end

    # source://activerecord/7.0.4.1/lib/active_record.rb#362
    def yaml_column_permitted_classes; end

    # source://activerecord/7.0.4.1/lib/active_record.rb#362
    def yaml_column_permitted_classes=(_arg0); end
  end
end

# source://activerecord/7.0.4.1/lib/active_record/errors.rb#347
ActiveRecord::UnknownAttributeError = ActiveModel::UnknownAttributeError

# source://activestorage-validator//lib/activestorage/validator/blob.rb#2
module ActiveRecord::Validations
  include GeneratedInstanceMethods
  include ::ActiveSupport::Callbacks
  include ::ActiveModel::Validations::HelperMethods
  include ::ActiveModel::Validations

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveModel::Validations::ClassMethods
  mixes_in_class_methods ::ActiveModel::Callbacks
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker
  mixes_in_class_methods ::ActiveModel::Translation
  mixes_in_class_methods ::ActiveModel::Validations::HelperMethods
  mixes_in_class_methods ::ActiveRecord::Validations::ClassMethods

  # source://activerecord/7.0.4.1/lib/active_record/validations.rb#46
  def save(**options); end

  # source://activerecord/7.0.4.1/lib/active_record/validations.rb#52
  def save!(**options); end

  # source://activerecord/7.0.4.1/lib/active_record/validations.rb#66
  def valid?(context = T.unsafe(nil)); end

  # source://activerecord/7.0.4.1/lib/active_record/validations.rb#66
  def validate(context = T.unsafe(nil)); end

  private

  # source://activerecord/7.0.4.1/lib/active_record/validations.rb#75
  def default_validation_context; end

  # source://activerecord/7.0.4.1/lib/active_record/validations.rb#83
  def perform_validations(options = T.unsafe(nil)); end

  # source://activerecord/7.0.4.1/lib/active_record/validations.rb#79
  def raise_validation_error; end

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
    def _validators; end
    def _validators=(value); end
    def _validators?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
    def _validators; end
    def _validators?; end
  end
end

# source://activestorage-validator//lib/activestorage/validator/blob.rb#3
class ActiveRecord::Validations::BlobValidator < ::ActiveModel::EachValidator
  # source://activestorage-validator//lib/activestorage/validator/blob.rb#4
  def validate_each(record, attribute, values); end

  private

  # @return [Boolean]
  #
  # source://activestorage-validator//lib/activestorage/validator/blob.rb#24
  def valid_content_type?(blob); end
end

# source://activestorage-validator//lib/activestorage/validator/version.rb#1
module ActiveStorage
  # source://activestorage/7.0.4.1/lib/active_storage.rb#52
  def analyzers; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#52
  def analyzers=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#58
  def binary_content_type; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#58
  def binary_content_type=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#60
  def content_types_allowed_inline; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#60
  def content_types_allowed_inline=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#59
  def content_types_to_serve_as_binary; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#59
  def content_types_to_serve_as_binary=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#357
  def draw_routes; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#357
  def draw_routes=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#45
  def logger; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#45
  def logger=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#54
  def paths; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#54
  def paths=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#51
  def previewers; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#51
  def previewers=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#49
  def queues; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#49
  def queues=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#360
  def replace_on_assign_to_many; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#360
  def replace_on_assign_to_many=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#358
  def resolve_model_to_route; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#358
  def resolve_model_to_route=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#356
  def routes_prefix; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#356
  def routes_prefix=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#353
  def service_urls_expire_in; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#353
  def service_urls_expire_in=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#365
  def silence_invalid_content_types_warning; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#365
  def silence_invalid_content_types_warning=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#62
  def supported_image_processing_methods; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#62
  def supported_image_processing_methods=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#361
  def track_variants; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#361
  def track_variants=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#351
  def unsupported_image_processing_arguments; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#351
  def unsupported_image_processing_arguments=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#354
  def urls_expire_in; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#354
  def urls_expire_in=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#56
  def variable_content_types; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#56
  def variable_content_types=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#47
  def variant_processor; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#47
  def variant_processor=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#46
  def verifier; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#46
  def verifier=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#363
  def video_preview_arguments; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#363
  def video_preview_arguments=(val); end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#57
  def web_image_content_types; end

  # source://activestorage/7.0.4.1/lib/active_storage.rb#57
  def web_image_content_types=(val); end

  class << self
    # source://activestorage/7.0.4.1/lib/active_storage.rb#52
    def analyzers; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#52
    def analyzers=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#58
    def binary_content_type; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#58
    def binary_content_type=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#60
    def content_types_allowed_inline; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#60
    def content_types_allowed_inline=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#59
    def content_types_to_serve_as_binary; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#59
    def content_types_to_serve_as_binary=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#357
    def draw_routes; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#357
    def draw_routes=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage/gem_version.rb#5
    def gem_version; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#45
    def logger; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#45
    def logger=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#54
    def paths; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#54
    def paths=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#51
    def previewers; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#51
    def previewers=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#49
    def queues; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#49
    def queues=(val); end

    # source://railties/7.0.4.1/lib/rails/engine.rb#405
    def railtie_helpers_paths; end

    # source://railties/7.0.4.1/lib/rails/engine.rb#394
    def railtie_namespace; end

    # source://railties/7.0.4.1/lib/rails/engine.rb#409
    def railtie_routes_url_helpers(include_path_helpers = T.unsafe(nil)); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#360
    def replace_on_assign_to_many; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#360
    def replace_on_assign_to_many=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#358
    def resolve_model_to_route; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#358
    def resolve_model_to_route=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#356
    def routes_prefix; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#356
    def routes_prefix=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#353
    def service_urls_expire_in; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#353
    def service_urls_expire_in=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#365
    def silence_invalid_content_types_warning; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#365
    def silence_invalid_content_types_warning=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#62
    def supported_image_processing_methods; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#62
    def supported_image_processing_methods=(val); end

    # source://railties/7.0.4.1/lib/rails/engine.rb#397
    def table_name_prefix; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#361
    def track_variants; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#361
    def track_variants=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#351
    def unsupported_image_processing_arguments; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#351
    def unsupported_image_processing_arguments=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#354
    def urls_expire_in; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#354
    def urls_expire_in=(val); end

    # source://railties/7.0.4.1/lib/rails/engine.rb#401
    def use_relative_model_naming?; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#56
    def variable_content_types; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#56
    def variable_content_types=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#47
    def variant_processor; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#47
    def variant_processor=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#46
    def verifier; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#46
    def verifier=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage/version.rb#7
    def version; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#363
    def video_preview_arguments; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#363
    def video_preview_arguments=(val); end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#57
    def web_image_content_types; end

    # source://activestorage/7.0.4.1/lib/active_storage.rb#57
    def web_image_content_types=(val); end
  end
end

# source://activestorage-validator//lib/activestorage/validator/version.rb#2
module ActiveStorage::Validator; end

# source://activestorage-validator//lib/activestorage/validator/version.rb#3
ActiveStorage::Validator::VERSION = T.let(T.unsafe(nil), String)
